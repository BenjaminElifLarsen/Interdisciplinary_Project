// <auto-generated />
using System;
using Domain.IPL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Domain.IPL.Migrations.Message
{
    [DbContext(typeof(MessageContext))]
    [Migration("20230215074627_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.DL.Models.MessageModels.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Domain.DL.Models.MessageModels.Message", b =>
                {
                    b.OwnsOne("Domain.DL.Models.MessageModels.ValueObjects.Author", "Author", b1 =>
                        {
                            b1.Property<int>("MessageId")
                                .HasColumnType("int");

                            b1.Property<int>("AuthorUserId")
                                .HasColumnType("int");

                            b1.HasKey("MessageId");

                            b1.ToTable("Messages");

                            b1.WithOwner()
                                .HasForeignKey("MessageId");
                        });

                    b.OwnsOne("Domain.DL.Models.MessageModels.ValueObjects.Eukaryote", "Eukaryote", b1 =>
                        {
                            b1.Property<int>("MessageId")
                                .HasColumnType("int");

                            b1.Property<int>("EukaryoteEukaryoteId")
                                .HasColumnType("int");

                            b1.HasKey("MessageId");

                            b1.ToTable("Messages");

                            b1.WithOwner()
                                .HasForeignKey("MessageId");
                        });

                    b.OwnsMany("Domain.DL.Models.MessageModels.ValueObjects.Like", "Likes", b1 =>
                        {
                            b1.Property<int>("MessageId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<int>("UserId")
                                .HasColumnType("int");

                            b1.HasKey("MessageId", "Id");

                            b1.ToTable("Message_Likes", (string)null);

                            b1.WithOwner("Message")
                                .HasForeignKey("MessageId");

                            b1.Navigation("Message");
                        });

                    b.OwnsOne("Domain.DL.Models.MessageModels.ValueObjects.ObservationTimeAndLocation", "Data", b1 =>
                        {
                            b1.Property<int>("MessageId")
                                .HasColumnType("int");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<DateTime>("Time")
                                .HasColumnType("datetime2");

                            b1.HasKey("MessageId");

                            b1.ToTable("Messages");

                            b1.WithOwner()
                                .HasForeignKey("MessageId");
                        });

                    b.Navigation("Author")
                        .IsRequired();

                    b.Navigation("Data")
                        .IsRequired();

                    b.Navigation("Eukaryote")
                        .IsRequired();

                    b.Navigation("Likes");
                });
#pragma warning restore 612, 618
        }
    }
}
